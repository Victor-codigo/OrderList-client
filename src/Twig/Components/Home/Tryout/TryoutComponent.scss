$timer_unit: 1s;
$timer_length: 5;
$timer_delay: 1s;

$starting_hue: 230deg;
$hue_increment: calc(360 / $timer_length);

@mixin scale_timer($scale) {
    $x: $scale;
    width: 50vmin * $x;
    height: 50vmin * $x;
    box-shadow: 0 0 0 (0.3vmin * $x), inset (0vmin * $x) (0vmin * $x) (0vmin * $x) rgba(white, 0.125), (0vmin * $x) (0vmin * $x) (0vmin * $x) rgba(white, 0.125);
    font-size: 25vmin * $x;
}

.countdown-container {
    height: 100vh;
    background-color: hsl($starting_hue, 80%, 60%);
    font-family: var(--bs-body-font-family);
    background-image: linear-gradient(135deg, $home-page-header-color-1, $home-page-header-color-2);

    .redirect-text {
        transform: translate(-50%, 20vmin);
    }

    .logo {
        width: 20vmin;
        max-width: 180px;
        transform: translate(-50%, -38vmin);
    }
}

.countdown {
    @include scale_timer(0.6);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    color: white;
    border-radius: 50%;
    font-weight: 700;


    &:before {
        content: '#{$timer_length}';
        animation: ($timer_unit * $timer_length) $timer_delay forwards timer_countdown, $timer_unit (
            $timer_delay - $timer_unit * 0.125) $timer_length timer_beat;

        @at-root {
            @keyframes timer_beat {

                40%,
                80% {
                    transform: none;
                }

                50% {
                    transform: scale(1.125
                    );
            }
        }
    }

    @at-root {
        @keyframes timer_countdown {
            @for $i from 0 through $timer_length {
                #{calc(100% / $timer_length) * $i} {
                    content: '#{-$i + $timer_length}';
                }
            }
        }
    }
}

&:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    z-index: -100;
    width: 100%;
    height: 100%;
    background-color: rgba(black, 0.125);
    animation: ($timer_unit * $timer_length) $timer_delay linear forwards timer_indicator;

    @at-root {
        @keyframes timer_indicator {
            100% {
                transform: translateY(100%);
            }
        }
    }
}
}